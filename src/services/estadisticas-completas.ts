/**
 * Servicio para obtener estad√≠sticas completas del sistema
 * Endpoint: GET /api/estadisticas/completas
 */

import apiClient from "@/interceptors/axios"
import type { 
  EstadisticasCompletasResponse,
  EstadisticasCompletasDatos 
} from "@/types/estadisticas-completas"

/**
 * Obtiene las estad√≠sticas completas del sistema MIA
 * 
 * Incluye datos de:
 * - Resumen general (personas, familias, usuarios)
 * - Geograf√≠a (departamentos, municipios, parroquias)
 * - Poblaci√≥n (distribuci√≥n por sexo, edad, estado civil)
 * - Familias (promedios, distribuci√≥n)
 * - Salud (enfermedades m√°s comunes)
 * - Educaci√≥n (profesiones, habilidades)
 * - Vivienda (tipos, servicios p√∫blicos)
 * - Cat√°logos del sistema
 * - Usuarios y roles
 * 
 * @returns Promesa con estad√≠sticas completas
 * @throws Error si la petici√≥n falla
 * 
 * @example
 * ```typescript
 * try {
 *   const estadisticas = await obtenerEstadisticasCompletas()
 *   console.log(estadisticas.resumen.totalPersonas)
 * } catch (error) {
 *   console.error('Error:', error)
 * }
 * ```
 */
export const obtenerEstadisticasCompletas = async (): Promise<EstadisticasCompletasDatos> => {
  try {
    console.log("üîÑ Iniciando petici√≥n a /api/estadisticas/completas...")
    
    const response = await apiClient.get<EstadisticasCompletasResponse>(
      "/api/estadisticas/completas"
    )

    console.log("‚úÖ Respuesta recibida:", response.data)

    // Validar respuesta
    if (!response.data.exito || !response.data.datos) {
      console.error("‚ùå Respuesta inv√°lida:", response.data)
      throw new Error(
        response.data.mensaje || "Error al obtener estad√≠sticas completas"
      )
    }

    console.log("‚úÖ Estad√≠sticas obtenidas correctamente")
    return response.data.datos
  } catch (error: any) {
    // Propagar error con mensaje descriptivo
    const errorMessage = error.response?.data?.mensaje 
      || error.message 
      || "Error desconocido al obtener estad√≠sticas completas"
    
    console.error("‚ùå Error en obtenerEstadisticasCompletas:", errorMessage)
    console.error("Error completo:", error)
    
    throw new Error(errorMessage)
  }
}
